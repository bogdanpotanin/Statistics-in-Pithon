# --------
# Потанин Богдан Станиславович
# Математическая Статистика в Python
# Урок 4. Выборочная функция распределения и гистограмма
# --------

import sys
import math
import pandas as pd
import numpy as np
import scipy
import matplotlib.pyplot as plt
import seaborn
from scipy.stats import t, chi2, f, norm, poisson, binom, uniform

np.set_printoptions(suppress = True)                    # уберем scientific notation

# --------
# Часть №1. Выборочная функция распределения
# --------

# Сформируем выборку из Хи-квадрат
# распределения с df степенями свободы
np.random.seed(123)                                     # для воспроизводимости результатов, полученных с использованием
                                                        # выборок, необходима установка случайного зерна
n = 100                                                 # переменная, хранящая объем выборки
df = 5                                                  # переменная, хранящая число степеней свободы
x = chi2.rvs(size = n,                                  # объем выборки
             df = df)                                   # число степеней свободы

# Напишем эмпирическую функцию распределения
t = 5
np.mean(x <= t)                                         # эмпирическая функция распределения
                                                        # в точке t
def ecdf(t, x):                                         # функция, считающая эмпирическую функцию
    return np.mean(x <= t)                              # распределения в произвольной точке
ecdf(t, x)                                              # эмпирическая функция распределения в точке t
chi2.cdf(t, df = df)                                    # теоретическая (настоящая) функция распределения в точке t

# Отобразим на одном графике эмпирическую и
# теоретическую (настоящую) функции распределения
# того распределения, из которого была
# получена выборка
x = np.sort(x)                                          # для удобства отсортируем
                                                        # реализации выборки
F_x = chi2.cdf(x, df = df)                              # значение функции распределения в соответствующих точках
plt.xlabel('x')                                         # название нижней оси графика
plt.ylabel('F(x)')                                      # название верхней оси графика
plt.plot(x, F_x, '--', markersize = 1,                  # график теоретической функции распределения
  label = "CDF", color = "limegreen")
seaborn.ecdfplot(x,                                     # график эмпирической функции распределения
                 label = "ECDF",
                 color = "palevioletred")
plt.legend()
# Цвета для графиков:
# https://matplotlib.org/3.1.0/gallery/color/named_colors.html

# --------
# Часть №2. Гистограмма (выборочная функция плотности)
# --------
f_x = chi2.pdf(x, df = df)                              # значение функции плотности в соответствующих точках
plt.xlabel('x')                                         # название нижней оси графика
plt.ylabel('f(x)')                                      # название верхней оси графика
plt.plot(x, f_x, '--', markersize = 20,                 # график теоретической функции распределения
  label = "PDF", color = "limegreen")
seaborn.histplot(x, stat = 'density',                   # гистограмма как график выборочной функции плотности
                 color = "palevioletred",
                 label = "histogram",
                 bins = 10)                             # число столбиков в Гистограмме
plt.legend()

# Рассчитаем значение Гистограммы
# в точке t вручную
t = 5                                                   # точка, в которой осуществляется расчет
t_adj = t - min(x)                                      # точка, скорректированная на минимальное значение в выборке
x_adj = x - min(x)                                      # выборка, скорректированная на минимальное значение
bin_n = 10                                              # число столбиков в Гистограмме
bin_w = (max(x) - min(x)) / bin_n                       # ширина столбика
t_w_ratio = (t_adj) / bin_w                             # отношение скорректированной точки к ширине столбика
bin_t = math.floor(t_w_ratio) + 1                       # номер столбика, в котором расположена точка
len(x[(x_adj >= ((bin_t - 1) * bin_w)) &
      (x_adj < (bin_t * bin_w))]) / (n * bin_w)         # значение Гистограммы в точке

# Задания
# 1. Постройте графики гистограммы и выборочной
#    функции распредленеия для распределений:
#    1)     Хи-Квадрат с 5-ю степенями свободы
#    2)     Стьюдента с 10-ю степенями свободы
#    3)     Нормального с математическим ожиданием 10
#           и дисперсией 25
# 2. В каждом пункте предыдущего задания проверьте,
#    как объем выборки влияет на то, насколько близки
#    окажутся выборочные и истинные характеристики
#    распределения. Сравните выборки объемом
#    в 10, 100, 1000 и 10000 наблюдений. При увеличении
#    объема выборки увеличивайте число столбиков
#    в гистограмме.
# 3. Самостоятельно запрограммируйте функции,
#    позволяющие рассчитывать значение выборочной
#    функции распределения для каждого:
#    1)    Наблюдения в выборке
#    2*)   Значения в произвольном векторе
# 4. Самостоятельно запрограммируйте функции,
#    позволяющие рассчитывать значение гистограммы
#    для каждого:
#    1)    Наблюдения в выборке
#    2*)   Значения в произвольном векторе
# 5. Самостоятельно запрограммируйте функции,
#    позволяющие по выборке строить график:
#    1)    Выборочной функции распределения
#    2*)   Гистограммы с произвольным
#          числом столбиков
# 6. Используя ЗБЧ и несколько выборок из Хи-Квадрат
#    распределения приблизительно рассчитайте:
#    1**)  Математическое ожидание выборочной функции
#          распределения в точке 5
#    2**)  Дисперсию выборочной функции распределения
#          в точке 5

